{"version":3,"file":"ClientWidgetApi.js","names":["_events","require","_PostmessageTransport","_WidgetApiDirection","_WidgetApiAction","_Capabilities","_ApiVersion","_WidgetEventCapability","_GetOpenIDAction","_SimpleObservable","_Symbols","_UpdateDelayedEventAction","_typeof","obj","Symbol","iterator","constructor","prototype","_regeneratorRuntime","exports","Op","Object","hasOwn","hasOwnProperty","defineProperty","key","desc","value","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","e","_e","f","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","toString","from","test","arr","len","arr2","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","target","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","p","bind","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","NewTarget","Reflect","construct","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","_return","ret","thr","ClientWidgetApi","_EventEmitter","_super","widget","iframe","driver","_this","Set","contentWindow","transport","PostmessageTransport","WidgetApiDirection","ToWidget","id","window","targetOrigin","origin","on","handleMessage","addEventListener","onIframeLoad","start","hasCapability","capability","allowedCapabilities","has","canUseRoomTimeline","roomId","concat","Symbols","AnyRoom","canSendRoomEvent","eventType","msgtype","allowedEvents","some","matchesAsRoomEvent","EventDirection","Send","canSendStateEvent","stateKey","matchesAsStateEvent","canSendToDeviceEvent","matchesAsToDeviceEvent","canReceiveRoomEvent","Receive","canReceiveStateEvent","canReceiveToDeviceEvent","canReceiveRoomAccountData","matchesAsRoomAccountData","isStopped","beginCapabilities","_this2","emit","requestedCaps","send","WidgetApiToWidgetAction","Capabilities","caps","capabilities","validateCapabilities","allowedCaps","console","log","WidgetEventCapability","findEventCapabilities","notifyCapabilities","requested","_this3","NotifyCapabilities","approved","warn","ev","waitForIframeLoad","contentLoadedWaitTimer","setTimeout","contentLoadedActionSent","handleContentLoadedAction","action","clearTimeout","reply","message","replyVersions","request","supported_versions","CurrentApiVersions","handleCapabilitiesRenegotiate","_request$data","_this4","data","newlyRequested","size","allowed","c","add","handleNavigate","_request$data2","_request$data3","_this5","MatrixCapabilities","MSC2931Navigate","uri","startsWith","onErr","handleDriverError","navigate","handleOIDC","_this6","phase","replyState","credential","OpenIDCredentials","original_request_id","requestId","replyError","msg","OpenIDRequestState","Blocked","observer","SimpleObservable","update","PendingUserConfirmation","close","Allowed","token","askOpenID","handleReadRoomAccountData","_this7","events","readRoomAccountData","evs","handleReadEvents","_this8","limit","askRoomIds","room_ids","_iterator2","_step2","since","state_key","readStateEvents","readRoomEvents","handleSendEvent","_this9","room_id","isDelayedEvent","delay","parent_delay_id","MSC4157SendDelayedEvent","sendEventPromise","sendEvent","content","_request$data$delay","_request$data$parent_","sendDelayedEvent","_request$data$delay2","_request$data$parent_2","sentEvent","event_id","eventId","delay_id","delayId","handleUpdateDelayedEvent","_this10","MSC4157UpdateDelayedEvent","UpdateDelayedEventAction","Cancel","Restart","updateDelayedEvent","_handleSendToDevice","_callee","_callee$","_context","messages","encrypted","sendToDevice","t0","handleSendToDevice","_x","_pollTurnServers","_callee2","turnServers","initialServer","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","server","_callee2$","_context2","UpdateTurnServers","t1","pollTurnServers","_x2","_x3","_handleWatchTurnServers","_callee3","_yield$turnServers$ne","_callee3$","_context3","MSC3846TurnServers","getTurnServers","handleWatchTurnServers","_x4","_handleUnwatchTurnServers","_callee4","_callee4$","_context4","handleUnwatchTurnServers","_x5","_handleReadRelations","_callee5","_this11","chunk","_callee5$","_context5","readEventRelations","rel_type","event_type","to","direction","prev_batch","prevBatch","next_batch","nextBatch","handleReadRelations","_x6","_handleUserDirectorySearch","_callee6","_callee6$","_context6","MSC3973UserDirectorySearch","search_term","searchUserDirectory","limited","results","map","user_id","userId","display_name","avatar_url","avatarUrl","handleUserDirectorySearch","_x7","_handleGetMediaConfig","_callee7","_callee7$","_context7","MSC4039UploadFile","getMediaConfig","handleGetMediaConfig","_x8","_handleUploadFile","_callee8","_callee8$","_context8","uploadFile","file","content_uri","contentUri","handleUploadFile","_x9","_handleDownloadFile","_callee9","_callee9$","_context9","MSC4039DownloadFile","downloadFile","handleDownloadFile","_x10","processError","actionEv","CustomEvent","detail","cancelable","defaultPrevented","WidgetApiFromWidgetAction","ContentLoaded","SupportedApiVersions","SendEvent","SendToDevice","GetOpenIDCredentials","MSC2974RenegotiateCapabilities","MSC2876ReadEvents","WatchTurnServers","UnwatchTurnServers","MSC3869ReadRelations","BeeperReadRoomAccountData","MSC4039GetMediaConfigAction","MSC4039UploadFileAction","MSC4039DownloadFileAction","takeScreenshot","TakeScreenshot","updateVisibility","isVisible","UpdateVisibility","visible","sendWidgetConfig","WidgetConfig","notifyModalWidgetButtonClicked","ButtonClicked","notifyModalWidgetClose","CloseModalWidget","_feedEvent","_callee10","rawEvent","currentViewedRoomId","_rawEvent$content","_callee10$","_context10","feedEvent","_x11","_x12","_feedToDevice","_callee11","_callee11$","_context11","feedToDevice","_x13","_x14","EventEmitter"],"sources":["../src/ClientWidgetApi.ts"],"sourcesContent":["/*\n * Copyright 2020 - 2024 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from \"events\";\nimport { ITransport } from \"./transport/ITransport\";\nimport { Widget } from \"./models/Widget\";\nimport { PostmessageTransport } from \"./transport/PostmessageTransport\";\nimport { WidgetApiDirection } from \"./interfaces/WidgetApiDirection\";\nimport { IWidgetApiRequest, IWidgetApiRequestEmptyData } from \"./interfaces/IWidgetApiRequest\";\nimport { IContentLoadedActionRequest } from \"./interfaces/ContentLoadedAction\";\nimport { WidgetApiFromWidgetAction, WidgetApiToWidgetAction } from \"./interfaces/WidgetApiAction\";\nimport { IWidgetApiErrorResponseData } from \"./interfaces/IWidgetApiErrorResponse\";\nimport { Capability, MatrixCapabilities } from \"./interfaces/Capabilities\";\nimport { IOpenIDUpdate, ISendEventDetails, ISendDelayedEventDetails, WidgetDriver } from \"./driver/WidgetDriver\";\nimport {\n    ICapabilitiesActionResponseData,\n    INotifyCapabilitiesActionRequestData,\n    IRenegotiateCapabilitiesActionRequest,\n} from \"./interfaces/CapabilitiesAction\";\nimport {\n    ISupportedVersionsActionRequest,\n    ISupportedVersionsActionResponseData,\n} from \"./interfaces/SupportedVersionsAction\";\nimport { CurrentApiVersions } from \"./interfaces/ApiVersion\";\nimport { IScreenshotActionResponseData } from \"./interfaces/ScreenshotAction\";\nimport { IVisibilityActionRequestData } from \"./interfaces/VisibilityAction\";\nimport { IWidgetApiAcknowledgeResponseData, IWidgetApiResponseData } from \"./interfaces/IWidgetApiResponse\";\nimport {\n    IModalWidgetButtonClickedRequestData,\n    IModalWidgetOpenRequestData,\n    IModalWidgetOpenRequestDataButton,\n    IModalWidgetReturnData,\n} from \"./interfaces/ModalWidgetActions\";\nimport {\n    ISendEventFromWidgetActionRequest,\n    ISendEventFromWidgetResponseData,\n    ISendEventToWidgetRequestData,\n} from \"./interfaces/SendEventAction\";\nimport {\n    ISendToDeviceFromWidgetActionRequest,\n    ISendToDeviceFromWidgetResponseData,\n    ISendToDeviceToWidgetRequestData,\n} from \"./interfaces/SendToDeviceAction\";\nimport { EventDirection, WidgetEventCapability } from \"./models/WidgetEventCapability\";\nimport { IRoomEvent } from \"./interfaces/IRoomEvent\";\nimport { IRoomAccountData } from \"./interfaces/IRoomAccountData\";\nimport {\n    IGetOpenIDActionRequest,\n    IGetOpenIDActionResponseData,\n    IOpenIDCredentials,\n    OpenIDRequestState,\n} from \"./interfaces/GetOpenIDAction\";\nimport { SimpleObservable } from \"./util/SimpleObservable\";\nimport { IOpenIDCredentialsActionRequestData } from \"./interfaces/OpenIDCredentialsAction\";\nimport { INavigateActionRequest } from \"./interfaces/NavigateAction\";\nimport { IReadEventFromWidgetActionRequest, IReadEventFromWidgetResponseData } from \"./interfaces/ReadEventAction\";\nimport {\n    ITurnServer,\n    IWatchTurnServersRequest,\n    IUnwatchTurnServersRequest,\n    IUpdateTurnServersRequestData,\n} from \"./interfaces/TurnServerActions\";\nimport { Symbols } from \"./Symbols\";\nimport {\n    IReadRelationsFromWidgetActionRequest,\n    IReadRelationsFromWidgetResponseData,\n} from \"./interfaces/ReadRelationsAction\";\nimport {\n    IUserDirectorySearchFromWidgetActionRequest,\n    IUserDirectorySearchFromWidgetResponseData,\n} from \"./interfaces/UserDirectorySearchAction\";\nimport {\n    IReadRoomAccountDataFromWidgetActionRequest,\n    IReadRoomAccountDataFromWidgetResponseData,\n} from \"./interfaces/ReadRoomAccountDataAction\";\nimport {\n    IGetMediaConfigActionFromWidgetActionRequest,\n    IGetMediaConfigActionFromWidgetResponseData,\n} from \"./interfaces/GetMediaConfigAction\";\nimport {\n    IUpdateDelayedEventFromWidgetActionRequest,\n    UpdateDelayedEventAction,\n} from \"./interfaces/UpdateDelayedEventAction\";\nimport {\n    IUploadFileActionFromWidgetActionRequest,\n    IUploadFileActionFromWidgetResponseData,\n} from \"./interfaces/UploadFileAction\";\nimport {\n    IDownloadFileActionFromWidgetActionRequest,\n    IDownloadFileActionFromWidgetResponseData,\n} from \"./interfaces/DownloadFileAction\";\n\n/**\n * API handler for the client side of widgets. This raises events\n * for each action received as `action:${action}` (eg: \"action:screenshot\").\n * Default handling can be prevented by using preventDefault() on the\n * raised event. The default handling varies for each action: ones\n * which the SDK can handle safely are acknowledged appropriately and\n * ones which are unhandled (custom or require the client to do something)\n * are rejected with an error.\n *\n * Events which are preventDefault()ed must reply using the transport.\n * The events raised will have a default of an IWidgetApiRequest\n * interface.\n *\n * When the ClientWidgetApi is ready to start sending requests, it will\n * raise a \"ready\" CustomEvent. After the ready event fires, actions can\n * be sent and the transport will be ready.\n *\n * When the widget has indicated it has loaded, this class raises a\n * \"preparing\" CustomEvent. The preparing event does not indicate that\n * the widget is ready to receive communications - that is signified by\n * the ready event exclusively.\n *\n * This class only handles one widget at a time.\n */\nexport class ClientWidgetApi extends EventEmitter {\n    public readonly transport: ITransport;\n\n    // contentLoadedActionSent is used to check that only one ContentLoaded request is send.\n    private contentLoadedActionSent = false;\n    private allowedCapabilities = new Set<Capability>();\n    private allowedEvents: WidgetEventCapability[] = [];\n    private isStopped = false;\n    private turnServers: AsyncGenerator<ITurnServer> | null = null;\n    private contentLoadedWaitTimer?: ReturnType<typeof setTimeout>;\n\n    /**\n     * Creates a new client widget API. This will instantiate the transport\n     * and start everything. When the iframe is loaded under the widget's\n     * conditions, a \"ready\" event will be raised.\n     * @param {Widget} widget The widget to communicate with.\n     * @param {HTMLIFrameElement} iframe The iframe the widget is in.\n     * @param {WidgetDriver} driver The driver for this widget/client.\n     */\n    public constructor(\n        public readonly widget: Widget,\n        private iframe: HTMLIFrameElement,\n        private driver: WidgetDriver,\n    ) {\n        super();\n        if (!iframe?.contentWindow) {\n            throw new Error(\"No iframe supplied\");\n        }\n        if (!widget) {\n            throw new Error(\"Invalid widget\");\n        }\n        if (!driver) {\n            throw new Error(\"Invalid driver\");\n        }\n        this.transport = new PostmessageTransport(\n            WidgetApiDirection.ToWidget,\n            widget.id,\n            iframe.contentWindow,\n            window,\n        );\n        this.transport.targetOrigin = widget.origin;\n        this.transport.on(\"message\", this.handleMessage.bind(this));\n\n        iframe.addEventListener(\"load\", this.onIframeLoad.bind(this));\n\n        this.transport.start();\n    }\n\n    public hasCapability(capability: Capability): boolean {\n        return this.allowedCapabilities.has(capability);\n    }\n\n    public canUseRoomTimeline(roomId: string | Symbols.AnyRoom): boolean {\n        return this.hasCapability(`org.matrix.msc2762.timeline:${Symbols.AnyRoom}`)\n            || this.hasCapability(`org.matrix.msc2762.timeline:${roomId}`);\n    }\n\n    public canSendRoomEvent(eventType: string, msgtype: string | null = null): boolean {\n        return this.allowedEvents.some(e => e.matchesAsRoomEvent(EventDirection.Send, eventType, msgtype));\n    }\n\n    public canSendStateEvent(eventType: string, stateKey: string): boolean {\n        return this.allowedEvents.some(e => e.matchesAsStateEvent(EventDirection.Send, eventType, stateKey));\n    }\n\n    public canSendToDeviceEvent(eventType: string): boolean {\n        return this.allowedEvents.some(e => e.matchesAsToDeviceEvent(EventDirection.Send, eventType));\n    }\n\n    public canReceiveRoomEvent(eventType: string, msgtype: string | null = null): boolean {\n        return this.allowedEvents.some(e => e.matchesAsRoomEvent(EventDirection.Receive, eventType, msgtype));\n    }\n\n    public canReceiveStateEvent(eventType: string, stateKey: string | null): boolean {\n        return this.allowedEvents.some(e => e.matchesAsStateEvent(EventDirection.Receive, eventType, stateKey));\n    }\n\n    public canReceiveToDeviceEvent(eventType: string): boolean {\n        return this.allowedEvents.some(e => e.matchesAsToDeviceEvent(EventDirection.Receive, eventType));\n    }\n\n    public canReceiveRoomAccountData(eventType: string): boolean {\n        return this.allowedEvents.some(e => e.matchesAsRoomAccountData(EventDirection.Receive, eventType));\n    }\n\n    public stop() {\n        this.isStopped = true;\n        this.transport.stop();\n    }\n\n    private beginCapabilities() {\n        // widget has loaded - tell all the listeners that\n        this.emit(\"preparing\");\n\n        let requestedCaps: Capability[];\n        this.transport.send<IWidgetApiRequestEmptyData, ICapabilitiesActionResponseData>(\n            WidgetApiToWidgetAction.Capabilities, {},\n        ).then(caps => {\n            requestedCaps = caps.capabilities;\n            return this.driver.validateCapabilities(new Set(caps.capabilities));\n        }).then(allowedCaps => {\n            console.log(`Widget ${this.widget.id} is allowed capabilities:`, Array.from(allowedCaps));\n            this.allowedCapabilities = allowedCaps;\n            this.allowedEvents = WidgetEventCapability.findEventCapabilities(allowedCaps);\n            this.notifyCapabilities(requestedCaps);\n            this.emit(\"ready\");\n        }).catch(e => {\n            this.emit(\"error:preparing\", e);\n        });\n    }\n\n    private notifyCapabilities(requested: Capability[]) {\n        this.transport.send(WidgetApiToWidgetAction.NotifyCapabilities, <INotifyCapabilitiesActionRequestData>{\n            requested: requested,\n            approved: Array.from(this.allowedCapabilities),\n        }).catch(e => {\n            console.warn(\"non-fatal error notifying widget of approved capabilities:\", e);\n        }).then(() => {\n            this.emit(\"capabilitiesNotified\")\n        });\n    }\n\n    private onIframeLoad(ev: Event) {\n        if (this.widget.waitForIframeLoad) {\n            // If the widget is set to waitForIframeLoad the capabilities immediatly get setup after load.\n            // The client does not wait for the ContentLoaded action.\n            this.beginCapabilities();\n        } else {\n            // Reaching this means, that the Iframe got reloaded/loaded and\n            // the clientApi is awaiting the FIRST ContentLoaded action.\n            console.log(\"waitForIframeLoad is false: waiting for widget to send contentLoaded\");\n            this.contentLoadedWaitTimer = setTimeout(() => {\n                console.error(\n                    \"Widget specified waitForIframeLoad=false but timed out waiting for contentLoaded event!\",\n                );\n            }, 10000);\n            this.contentLoadedActionSent = false;\n        }\n    }\n\n    private handleContentLoadedAction(action: IContentLoadedActionRequest) {\n        if (this.contentLoadedWaitTimer !== undefined) {\n            clearTimeout(this.contentLoadedWaitTimer);\n            this.contentLoadedWaitTimer = undefined;\n        }\n        if (this.contentLoadedActionSent) {\n            throw new Error(\"Improper sequence: ContentLoaded Action can only be sent once after the widget loaded \"\n                            +\"and should only be used if waitForIframeLoad is false (default=true)\");\n        }\n        if (this.widget.waitForIframeLoad) {\n            this.transport.reply(action, <IWidgetApiErrorResponseData>{\n                error: {\n                    message: \"Improper sequence: not expecting ContentLoaded event if \"\n                    +\"waitForIframeLoad is true (default=true)\",\n                },\n            });\n        } else {\n            this.transport.reply(action, <IWidgetApiRequestEmptyData>{});\n            this.beginCapabilities();\n        }\n        this.contentLoadedActionSent = true;\n    }\n\n    private replyVersions(request: ISupportedVersionsActionRequest) {\n        this.transport.reply<ISupportedVersionsActionResponseData>(request, {\n            supported_versions: CurrentApiVersions,\n        });\n    }\n\n    private handleCapabilitiesRenegotiate(request: IRenegotiateCapabilitiesActionRequest) {\n        // acknowledge first\n        this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n\n        const requested = request.data?.capabilities || [];\n        const newlyRequested = new Set(requested.filter(r => !this.hasCapability(r)));\n        if (newlyRequested.size === 0) {\n            // Nothing to do - notify capabilities\n            return this.notifyCapabilities([]);\n        }\n\n        this.driver.validateCapabilities(newlyRequested).then(allowed => {\n            allowed.forEach(c => this.allowedCapabilities.add(c));\n\n            const allowedEvents = WidgetEventCapability.findEventCapabilities(allowed);\n            allowedEvents.forEach(c => this.allowedEvents.push(c));\n\n            return this.notifyCapabilities(Array.from(newlyRequested));\n        });\n    }\n\n    private handleNavigate(request: INavigateActionRequest) {\n        if (!this.hasCapability(MatrixCapabilities.MSC2931Navigate)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Missing capability\"},\n            });\n        }\n\n        if (!request.data?.uri || !request.data?.uri.toString().startsWith(\"https://matrix.to/#\")) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Invalid matrix.to URI\"},\n            });\n        }\n\n        const onErr = (e: unknown) => {\n            console.error(\"[ClientWidgetApi] Failed to handle navigation: \", e);\n            this.handleDriverError(e, request, \"Error handling navigation\");\n        };\n\n        try {\n            this.driver.navigate(request.data.uri.toString()).catch((e: unknown) => onErr(e)).then(() => {\n                return this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n            });\n        } catch (e) {\n            return onErr(e);\n        }\n    }\n\n    private handleOIDC(request: IGetOpenIDActionRequest) {\n        let phase = 1; // 1 = initial request, 2 = after user manual confirmation\n\n        const replyState = (state: OpenIDRequestState, credential?: IOpenIDCredentials) => {\n            credential = credential || {};\n            if (phase > 1) {\n                return this.transport.send<IOpenIDCredentialsActionRequestData>(\n                    WidgetApiToWidgetAction.OpenIDCredentials,\n                    {\n                        state: state,\n                        original_request_id: request.requestId,\n                        ...credential,\n                    },\n                );\n            } else {\n                return this.transport.reply<IGetOpenIDActionResponseData>(request, {\n                    state: state,\n                    ...credential,\n                });\n            }\n        };\n\n        const replyError = (msg: string) => {\n            console.error(\"[ClientWidgetApi] Failed to handle OIDC: \", msg);\n            if (phase > 1) {\n                // We don't have a way to indicate that a random error happened in this flow, so\n                // just block the attempt.\n                return replyState(OpenIDRequestState.Blocked);\n            } else {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: {message: msg},\n                });\n            }\n        };\n\n        const observer = new SimpleObservable<IOpenIDUpdate>(update => {\n            if (update.state === OpenIDRequestState.PendingUserConfirmation && phase > 1) {\n                observer.close();\n                return replyError(\"client provided out-of-phase response to OIDC flow\");\n            }\n\n            if (update.state === OpenIDRequestState.PendingUserConfirmation) {\n                replyState(update.state);\n                phase++;\n                return;\n            }\n\n            if (update.state === OpenIDRequestState.Allowed && !update.token) {\n                return replyError(\"client provided invalid OIDC token for an allowed request\");\n            }\n            if (update.state === OpenIDRequestState.Blocked) {\n                update.token = undefined; // just in case the client did something weird\n            }\n\n            observer.close();\n            return replyState(update.state, update.token);\n        });\n\n        this.driver.askOpenID(observer);\n    }\n    private handleReadRoomAccountData(request: IReadRoomAccountDataFromWidgetActionRequest) {\n        let events: Promise<IRoomAccountData[]> = Promise.resolve([]);\n        events = this.driver.readRoomAccountData(request.data.type);\n\n        if (!this.canReceiveRoomAccountData(request.data.type)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Cannot read room account data of this type\"},\n            });\n        }\n\n        return events.then((evs) => {\n            this.transport.reply<IReadRoomAccountDataFromWidgetResponseData>(request, {events: evs})\n        });\n    }\n\n    private handleReadEvents(request: IReadEventFromWidgetActionRequest) {\n        if (!request.data.type) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Invalid request - missing event type\"},\n            });\n        }\n        if (request.data.limit !== undefined && (!request.data.limit || request.data.limit < 0)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Invalid request - limit out of range\"},\n            });\n        }\n\n        let askRoomIds: string[] | null = null; // null denotes current room only\n        if (request.data.room_ids) {\n            askRoomIds = request.data.room_ids as string[];\n            if (!Array.isArray(askRoomIds)) {\n                askRoomIds = [askRoomIds as any as string];\n            }\n            for (const roomId of askRoomIds) {\n                if (!this.canUseRoomTimeline(roomId)) {\n                    return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                        error: {message: `Unable to access room timeline: ${roomId}`},\n                    });\n                }\n            }\n        }\n\n        const limit = request.data.limit || 0;\n        const since = request.data.since;\n\n        let events: Promise<IRoomEvent[]> = Promise.resolve([]);\n        if (request.data.state_key !== undefined) {\n            const stateKey = request.data.state_key === true ? undefined : request.data.state_key.toString();\n            if (!this.canReceiveStateEvent(request.data.type, stateKey ?? null)) {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: {message: \"Cannot read state events of this type\"},\n                });\n            }\n            events = this.driver.readStateEvents(request.data.type, stateKey, limit, askRoomIds);\n        } else {\n            if (!this.canReceiveRoomEvent(request.data.type, request.data.msgtype)) {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: {message: \"Cannot read room events of this type\"},\n                });\n            }\n            events = this.driver.readRoomEvents(request.data.type, request.data.msgtype, limit, askRoomIds, since);\n        }\n\n        return events.then(evs => this.transport.reply<IReadEventFromWidgetResponseData>(request, {events: evs}));\n    }\n\n    private handleSendEvent(request: ISendEventFromWidgetActionRequest) {\n        if (!request.data.type) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Invalid request - missing event type\"},\n            });\n        }\n\n        if (!!request.data.room_id && !this.canUseRoomTimeline(request.data.room_id)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: `Unable to access room timeline: ${request.data.room_id}`},\n            });\n        }\n\n        const isDelayedEvent = request.data.delay !== undefined || request.data.parent_delay_id !== undefined;\n        if (isDelayedEvent && !this.hasCapability(MatrixCapabilities.MSC4157SendDelayedEvent)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Missing capability\"},\n            });\n        }\n\n        let sendEventPromise: Promise<ISendEventDetails|ISendDelayedEventDetails>;\n        if (request.data.state_key !== undefined) {\n            if (!this.canSendStateEvent(request.data.type, request.data.state_key)) {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: {message: \"Cannot send state events of this type\"},\n                });\n            }\n\n            if (!isDelayedEvent) {\n                sendEventPromise = this.driver.sendEvent(\n                    request.data.type,\n                    request.data.content || {},\n                    request.data.state_key,\n                    request.data.room_id,\n                );\n            } else {\n                sendEventPromise = this.driver.sendDelayedEvent(\n                    request.data.delay ?? null,\n                    request.data.parent_delay_id ?? null,\n                    request.data.type,\n                    request.data.content || {},\n                    request.data.state_key,\n                    request.data.room_id,\n                );\n            }\n        } else {\n            const content = request.data.content as { msgtype?: string } || {};\n            const msgtype = content['msgtype'];\n            if (!this.canSendRoomEvent(request.data.type, msgtype)) {\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: {message: \"Cannot send room events of this type\"},\n                });\n            }\n\n            if (!isDelayedEvent) {\n                sendEventPromise = this.driver.sendEvent(\n                    request.data.type,\n                    content,\n                    null, // not sending a state event\n                    request.data.room_id,\n                );\n            } else {\n                sendEventPromise = this.driver.sendDelayedEvent(\n                    request.data.delay ?? null,\n                    request.data.parent_delay_id ?? null,\n                    request.data.type,\n                    content,\n                    null, // not sending a state event\n                    request.data.room_id,\n                );\n            }\n        }\n\n        sendEventPromise.then(sentEvent => {\n            return this.transport.reply<ISendEventFromWidgetResponseData>(request, {\n                room_id: sentEvent.roomId,\n                ...(\"eventId\" in sentEvent ? {\n                    event_id: sentEvent.eventId,\n                } : {\n                    delay_id: sentEvent.delayId,\n                }),\n            });\n        }).catch((e: unknown) => {\n            console.error(\"error sending event: \", e);\n            this.handleDriverError(e, request, \"Error sending event\");\n        });\n    }\n\n    private handleUpdateDelayedEvent(request: IUpdateDelayedEventFromWidgetActionRequest) {\n        if (!request.data.delay_id) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Invalid request - missing delay_id\"},\n            });\n        }\n\n        if (!this.hasCapability(MatrixCapabilities.MSC4157UpdateDelayedEvent)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Missing capability\"},\n            });\n        }\n\n        switch (request.data.action) {\n            case UpdateDelayedEventAction.Cancel:\n            case UpdateDelayedEventAction.Restart:\n            case UpdateDelayedEventAction.Send:\n                this.driver.updateDelayedEvent(request.data.delay_id, request.data.action).then(() => {\n                    return this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n                }).catch((e: unknown) => {\n                    console.error(\"error updating delayed event: \", e);\n                    this.handleDriverError(e, request, \"Error updating delayed event\");\n                });\n                break;\n            default:\n                return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: {message: \"Invalid request - unsupported action\"},\n                });\n        }\n    }\n\n    private async handleSendToDevice(request: ISendToDeviceFromWidgetActionRequest): Promise<void> {\n        if (!request.data.type) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Invalid request - missing event type\"},\n            });\n        } else if (!request.data.messages) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Invalid request - missing event contents\"},\n            });\n        } else if (typeof request.data.encrypted !== \"boolean\") {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Invalid request - missing encryption flag\"},\n            });\n        } else if (!this.canSendToDeviceEvent(request.data.type)) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Cannot send to-device events of this type\"},\n            });\n        } else {\n            try {\n                await this.driver.sendToDevice(request.data.type, request.data.encrypted, request.data.messages);\n                await this.transport.reply<ISendToDeviceFromWidgetResponseData>(request, {});\n            } catch (e) {\n                console.error(\"error sending to-device event\", e);\n                this.handleDriverError(e, request, \"Error sending event\");\n            }\n        }\n    }\n\n    private async pollTurnServers(turnServers: AsyncGenerator<ITurnServer>, initialServer: ITurnServer) {\n        try {\n            await this.transport.send<IUpdateTurnServersRequestData>(\n                WidgetApiToWidgetAction.UpdateTurnServers,\n                initialServer as IUpdateTurnServersRequestData, // it's compatible, but missing the index signature\n            );\n\n            // Pick the generator up where we left off\n            for await (const server of turnServers) {\n                await this.transport.send<IUpdateTurnServersRequestData>(\n                    WidgetApiToWidgetAction.UpdateTurnServers,\n                    server as IUpdateTurnServersRequestData, // it's compatible, but missing the index signature\n                );\n            }\n        } catch (e) {\n            console.error(\"error polling for TURN servers\", e);\n        }\n    }\n\n    private async handleWatchTurnServers(request: IWatchTurnServersRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC3846TurnServers)) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Missing capability\"},\n            });\n        } else if (this.turnServers) {\n            // We're already polling, so this is a no-op\n            await this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n        } else {\n            try {\n                const turnServers = this.driver.getTurnServers();\n\n                // Peek at the first result, so we can at least verify that the\n                // client isn't banned from getting TURN servers entirely\n                const { done, value } = await turnServers.next();\n                if (done) throw new Error(\"Client refuses to provide any TURN servers\");\n                await this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n\n                // Start the poll loop, sending the widget the initial result\n                this.pollTurnServers(turnServers, value);\n                this.turnServers = turnServers;\n            } catch (e) {\n                console.error(\"error getting first TURN server results\", e);\n                await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                    error: {message: \"TURN servers not available\"},\n                });\n            }\n        }\n    }\n\n    private async handleUnwatchTurnServers(request: IUnwatchTurnServersRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC3846TurnServers)) {\n            await this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: {message: \"Missing capability\"},\n            });\n        } else if (!this.turnServers) {\n            // We weren't polling anyways, so this is a no-op\n            await this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n        } else {\n            // Stop the generator, allowing it to clean up\n            await this.turnServers.return(undefined);\n            this.turnServers = null;\n            await this.transport.reply<IWidgetApiAcknowledgeResponseData>(request, {});\n        }\n    }\n\n    private async handleReadRelations(request: IReadRelationsFromWidgetActionRequest) {\n        if (!request.data.event_id) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing event ID\" },\n            });\n        }\n\n        if (request.data.limit !== undefined && request.data.limit < 0) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - limit out of range\" },\n            });\n        }\n\n        if (request.data.room_id !== undefined && !this.canUseRoomTimeline(request.data.room_id)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: `Unable to access room timeline: ${request.data.room_id}` },\n            });\n        }\n\n        try {\n            const result = await this.driver.readEventRelations(\n                request.data.event_id, request.data.room_id, request.data.rel_type,\n                request.data.event_type, request.data.from, request.data.to,\n                request.data.limit, request.data.direction,\n            );\n\n            // only return events that the user has the permission to receive\n            const chunk = result.chunk.filter(e => {\n                if (e.state_key !== undefined) {\n                    return this.canReceiveStateEvent(e.type, e.state_key);\n                } else {\n                    return this.canReceiveRoomEvent(e.type, (e.content as { msgtype?: string })['msgtype']);\n                }\n            });\n\n            return this.transport.reply<IReadRelationsFromWidgetResponseData>(\n                request,\n                {\n                    chunk,\n                    prev_batch: result.prevBatch,\n                    next_batch: result.nextBatch,\n                },\n            );\n        } catch (e) {\n            console.error(\"error getting the relations\", e);\n            this.handleDriverError(e, request, \"Unexpected error while reading relations\");\n        }\n    }\n\n    private async handleUserDirectorySearch(request: IUserDirectorySearchFromWidgetActionRequest) {\n        if (!this.hasCapability(MatrixCapabilities.MSC3973UserDirectorySearch)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        if (typeof request.data.search_term !== 'string') {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - missing search term\" },\n            });\n        }\n\n        if (request.data.limit !== undefined && request.data.limit < 0) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Invalid request - limit out of range\" },\n            });\n        }\n\n        try {\n            const result = await this.driver.searchUserDirectory(\n                request.data.search_term, request.data.limit,\n            );\n\n            return this.transport.reply<IUserDirectorySearchFromWidgetResponseData>(\n                request,\n                {\n                    limited: result.limited,\n                    results: result.results.map(r => ({\n                        user_id: r.userId,\n                        display_name: r.displayName,\n                        avatar_url: r.avatarUrl,\n                    })),\n                },\n            );\n        } catch (e) {\n            console.error(\"error searching in the user directory\", e);\n            this.handleDriverError(e, request, \"Unexpected error while searching in the user directory\");\n        }\n    }\n\n    private async handleGetMediaConfig(request: IGetMediaConfigActionFromWidgetActionRequest) {\n        if (!this.hasCapability(MatrixCapabilities.MSC4039UploadFile)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        try {\n            const result = await this.driver.getMediaConfig()\n\n            return this.transport.reply<IGetMediaConfigActionFromWidgetResponseData>(\n                request,\n                result,\n            );\n        } catch (e) {\n            console.error(\"error while getting the media configuration\", e);\n            this.handleDriverError(e, request, \"Unexpected error while getting the media configuration\");\n        }\n    }\n\n    private async handleUploadFile(request: IUploadFileActionFromWidgetActionRequest) {\n        if (!this.hasCapability(MatrixCapabilities.MSC4039UploadFile)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        try {\n            const result = await this.driver.uploadFile(request.data.file);\n\n            return this.transport.reply<IUploadFileActionFromWidgetResponseData>(\n                request,\n                { content_uri: result.contentUri },\n            );\n        } catch (e) {\n            console.error(\"error while uploading a file\", e);\n            this.handleDriverError(e, request, \"Unexpected error while uploading a file\");\n        }\n    }\n\n    private async handleDownloadFile(request: IDownloadFileActionFromWidgetActionRequest): Promise<void> {\n        if (!this.hasCapability(MatrixCapabilities.MSC4039DownloadFile)) {\n            return this.transport.reply<IWidgetApiErrorResponseData>(request, {\n                error: { message: \"Missing capability\" },\n            });\n        }\n\n        try {\n            const result = await this.driver.downloadFile(request.data.content_uri);\n\n            return this.transport.reply<IDownloadFileActionFromWidgetResponseData>(\n                request,\n                { file: result.file },\n            );\n        } catch (e) {\n            console.error(\"error while downloading a file\", e);\n            this.handleDriverError(e, request, \"Unexpected error while downloading a file\");\n        }\n    }\n\n    private handleDriverError(e: unknown, request: IWidgetApiRequest, message: string) {\n        const data = this.driver.processError(e);\n        this.transport.reply<IWidgetApiErrorResponseData>(request, {\n            error: {\n                message,\n                ...data,\n            },\n        });\n    }\n\n    private handleMessage(ev: CustomEvent<IWidgetApiRequest>) {\n        if (this.isStopped) return;\n        const actionEv = new CustomEvent(`action:${ev.detail.action}`, {\n            detail: ev.detail,\n            cancelable: true,\n        });\n        this.emit(`action:${ev.detail.action}`, actionEv);\n        if (!actionEv.defaultPrevented) {\n            switch (ev.detail.action) {\n                case WidgetApiFromWidgetAction.ContentLoaded:\n                    return this.handleContentLoadedAction(<IContentLoadedActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.SupportedApiVersions:\n                    return this.replyVersions(<ISupportedVersionsActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.SendEvent:\n                    return this.handleSendEvent(<ISendEventFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.SendToDevice:\n                    return this.handleSendToDevice(<ISendToDeviceFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.GetOpenIDCredentials:\n                    return this.handleOIDC(<IGetOpenIDActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC2931Navigate:\n                    return this.handleNavigate(<INavigateActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC2974RenegotiateCapabilities:\n                    return this.handleCapabilitiesRenegotiate(<IRenegotiateCapabilitiesActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC2876ReadEvents:\n                    return this.handleReadEvents(<IReadEventFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.WatchTurnServers:\n                    return this.handleWatchTurnServers(<IWatchTurnServersRequest>ev.detail);\n                case WidgetApiFromWidgetAction.UnwatchTurnServers:\n                    return this.handleUnwatchTurnServers(<IUnwatchTurnServersRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC3869ReadRelations:\n                    return this.handleReadRelations(<IReadRelationsFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC3973UserDirectorySearch:\n                    return this.handleUserDirectorySearch(<IUserDirectorySearchFromWidgetActionRequest>ev.detail)\n                case WidgetApiFromWidgetAction.BeeperReadRoomAccountData:\n                    return this.handleReadRoomAccountData(<IReadRoomAccountDataFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC4039GetMediaConfigAction:\n                    return this.handleGetMediaConfig(<IGetMediaConfigActionFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC4039UploadFileAction:\n                    return this.handleUploadFile(<IUploadFileActionFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC4039DownloadFileAction:\n                    return this.handleDownloadFile(<IDownloadFileActionFromWidgetActionRequest>ev.detail);\n                case WidgetApiFromWidgetAction.MSC4157UpdateDelayedEvent:\n                    return this.handleUpdateDelayedEvent(<IUpdateDelayedEventFromWidgetActionRequest>ev.detail);\n\n                default:\n                    return this.transport.reply(ev.detail, <IWidgetApiErrorResponseData>{\n                        error: {\n                            message: \"Unknown or unsupported action: \" + ev.detail.action,\n                        },\n                    });\n            }\n        }\n    }\n\n    /**\n     * Takes a screenshot of the widget.\n     * @returns Resolves to the widget's screenshot.\n     * @throws Throws if there is a problem.\n     */\n    public takeScreenshot(): Promise<IScreenshotActionResponseData> {\n        return this.transport.send(WidgetApiToWidgetAction.TakeScreenshot, <IWidgetApiRequestEmptyData>{});\n    }\n\n    /**\n     * Alerts the widget to whether or not it is currently visible.\n     * @param {boolean} isVisible Whether the widget is visible or not.\n     * @returns {Promise<IWidgetApiResponseData>} Resolves when the widget acknowledges the update.\n     */\n    public updateVisibility(isVisible: boolean): Promise<IWidgetApiResponseData> {\n        return this.transport.send(WidgetApiToWidgetAction.UpdateVisibility, <IVisibilityActionRequestData>{\n            visible: isVisible,\n        });\n    }\n\n    public sendWidgetConfig(data: IModalWidgetOpenRequestData): Promise<void> {\n        return this.transport.send<IModalWidgetOpenRequestData>(WidgetApiToWidgetAction.WidgetConfig, data).then();\n    }\n\n    public notifyModalWidgetButtonClicked(id: IModalWidgetOpenRequestDataButton[\"id\"]): Promise<void> {\n        return this.transport.send<IModalWidgetButtonClickedRequestData>(\n            WidgetApiToWidgetAction.ButtonClicked, {id},\n        ).then();\n    }\n\n    public notifyModalWidgetClose(data: IModalWidgetReturnData): Promise<void> {\n        return this.transport.send<IModalWidgetReturnData>(\n            WidgetApiToWidgetAction.CloseModalWidget, data,\n        ).then();\n    }\n\n    /**\n     * Feeds an event to the widget. If the widget is not able to accept the event due to\n     * permissions, this will no-op and return calmly. If the widget failed to handle the\n     * event, this will raise an error.\n     * @param {IRoomEvent} rawEvent The event to (try to) send to the widget.\n     * @param {string} currentViewedRoomId The room ID the user is currently interacting with.\n     * Not the room ID of the event.\n     * @returns {Promise<void>} Resolves when complete, rejects if there was an error sending.\n     */\n    public async feedEvent(rawEvent: IRoomEvent, currentViewedRoomId: string): Promise<void> {\n        if (rawEvent.room_id !== currentViewedRoomId && !this.canUseRoomTimeline(rawEvent.room_id)) {\n            return; // no-op\n        }\n\n        if (rawEvent.state_key !== undefined && rawEvent.state_key !== null) {\n            // state event\n            if (!this.canReceiveStateEvent(rawEvent.type, rawEvent.state_key)) {\n                return; // no-op\n            }\n        } else {\n            // message event\n            if (!this.canReceiveRoomEvent(rawEvent.type, (rawEvent.content as { msgtype?: string })?.[\"msgtype\"])) {\n                return; // no-op\n            }\n        }\n\n        // Feed the event into the widget\n        await this.transport.send<ISendEventToWidgetRequestData>(\n            WidgetApiToWidgetAction.SendEvent,\n            rawEvent as ISendEventToWidgetRequestData, // it's compatible, but missing the index signature\n        );\n    }\n\n    /**\n     * Feeds a to-device event to the widget. If the widget is not able to accept the\n     * event due to permissions, this will no-op and return calmly. If the widget failed\n     * to handle the event, this will raise an error.\n     * @param {IRoomEvent} rawEvent The event to (try to) send to the widget.\n     * @param {boolean} encrypted Whether the event contents were encrypted.\n     * @returns {Promise<void>} Resolves when complete, rejects if there was an error sending.\n     */\n    public async feedToDevice(rawEvent: IRoomEvent, encrypted: boolean): Promise<void> {\n        if (this.canReceiveToDeviceEvent(rawEvent.type)) {\n            await this.transport.send<ISendToDeviceToWidgetRequestData>(\n                WidgetApiToWidgetAction.SendToDevice,\n                // it's compatible, but missing the index signature\n                { ...rawEvent, encrypted } as ISendToDeviceToWidgetRequestData,\n            );\n        }\n    }\n}\n"],"mappings":"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"}