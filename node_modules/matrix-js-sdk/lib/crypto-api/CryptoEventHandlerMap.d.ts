import { CryptoEvent } from "./CryptoEvent.ts";
import { VerificationRequest } from "./verification.ts";
import { UserVerificationStatus } from "./index.ts";
import { RustBackupCryptoEventMap } from "../rust-crypto/backup.ts";
/**
 * A map of the {@link CryptoEvent} fired by the {@link CryptoApi} and their payloads.
 */
export type CryptoEventHandlerMap = {
    [CryptoEvent.VerificationRequestReceived]: (request: VerificationRequest) => void;
    [CryptoEvent.UserTrustStatusChanged]: (userId: string, userTrustLevel: UserVerificationStatus) => void;
    [CryptoEvent.KeyBackupDecryptionKeyCached]: (version: string) => void;
    [CryptoEvent.KeysChanged]: (data: {}) => void;
    [CryptoEvent.WillUpdateDevices]: (users: string[], initialFetch: boolean) => void;
    [CryptoEvent.DevicesUpdated]: (users: string[], initialFetch: boolean) => void;
} & RustBackupCryptoEventMap;
//# sourceMappingURL=CryptoEventHandlerMap.d.ts.map