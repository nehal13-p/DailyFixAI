{"version":3,"file":"CryptoEventHandlerMap.js","names":["CryptoEvent"],"sources":["../../src/crypto-api/CryptoEventHandlerMap.ts"],"sourcesContent":["/*\n * Copyright 2024 The Matrix.org Foundation C.I.C.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CryptoEvent } from \"./CryptoEvent.ts\";\nimport { VerificationRequest } from \"./verification.ts\";\nimport { UserVerificationStatus } from \"./index.ts\";\nimport { RustBackupCryptoEventMap } from \"../rust-crypto/backup.ts\";\n\n/**\n * A map of the {@link CryptoEvent} fired by the {@link CryptoApi} and their payloads.\n */\nexport type CryptoEventHandlerMap = {\n    [CryptoEvent.VerificationRequestReceived]: (request: VerificationRequest) => void;\n    [CryptoEvent.UserTrustStatusChanged]: (userId: string, userTrustLevel: UserVerificationStatus) => void;\n    [CryptoEvent.KeyBackupDecryptionKeyCached]: (version: string) => void;\n    [CryptoEvent.KeysChanged]: (data: {}) => void;\n    [CryptoEvent.WillUpdateDevices]: (users: string[], initialFetch: boolean) => void;\n    [CryptoEvent.DevicesUpdated]: (users: string[], initialFetch: boolean) => void;\n} & RustBackupCryptoEventMap;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;;AAK9C;AACA;AACA","ignoreList":[]}